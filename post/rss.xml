<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 尚弟的小笔记</title>
    <link>https://blog.shrp.me/post.html</link>
    <description>Recent content in Posts on 尚弟的小笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>shrp</copyright>
    <lastBuildDate>Mon, 19 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.shrp.me/post/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2021 07 19 在Mac上打开Iterm或终端时重建tab</title>
      <link>https://blog.shrp.me/post/%E5%9C%A8Mac%E4%B8%8A%E6%89%93%E5%BC%80Iterm%E6%88%96%E7%BB%88%E7%AB%AF%E6%97%B6%E9%87%8D%E5%BB%BAtab.html</link>
      <pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/post/%E5%9C%A8Mac%E4%B8%8A%E6%89%93%E5%BC%80Iterm%E6%88%96%E7%BB%88%E7%AB%AF%E6%97%B6%E9%87%8D%E5%BB%BAtab.html</guid>
      <description>&lt;p&gt;长期以来都不知道 Mac 上的 iTerm2 或者自带的 Terminal 程序怎么能在打开的时候恢复上一次关闭的标签，但是如果 Mac 四国重启，发现都是能打开上一次的标签的，说明有这个功能。&lt;/p&gt;
&lt;p&gt;今天谷歌了一下，看到很多答案都是在系统设置里，一开始我还以为是答非所问，试了一下才发现所言非虚^_^。&lt;/p&gt;
&lt;p&gt;答案就是在系统设置下的通用设置里，不要勾选「退出 App 时关闭窗口」。对于 iTerm，还需要在 General 设置页的 Startup  设置里选择 Use System Windows Restoration Setting。&lt;/p&gt;
&lt;p&gt;![](&lt;a href=&#34;http://stirp.github.io/img/iShot2021-07-19&#34;&gt;http://stirp.github.io/img/iShot2021-07-19&lt;/a&gt; 10.29.40.png)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://stirp.github.io/img/iterm.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这样下次打开的窗口的时候就能恢复上次关闭的窗口啦。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java流水帐代码的重构与单元测试</title>
      <link>https://blog.shrp.me/post/Java%E6%B5%81%E6%B0%B4%E5%B8%90%E4%BB%A3%E7%A0%81%E7%9A%84%E9%87%8D%E6%9E%84%E4%B8%8E%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html</link>
      <pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/post/Java%E6%B5%81%E6%B0%B4%E5%B8%90%E4%BB%A3%E7%A0%81%E7%9A%84%E9%87%8D%E6%9E%84%E4%B8%8E%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html</guid>
      <description>背景 大多数软件开发者都是学过很多编程思想和知识的人,绝对不是不知道什么代码是好的,什么样的代码是糟糕的. 然而我们在工作的过程中,为了满足和解</description>
    </item>
    
    <item>
      <title>【分享】我在阿里做架构 | 单测最佳实践</title>
      <link>https://blog.shrp.me/post/%E5%8D%95%E6%B5%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html</link>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/post/%E5%8D%95%E6%B5%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html</guid>
      <description>这篇文章的结论跟我现在的实践非常的类似，预计本月我会把我的实践也更新到 blog 里。这篇文章的原文地址是这里 前言 大家仔细思考，我们究竟为什么需要编写</description>
    </item>
    
    <item>
      <title>【分享】2021 06 15 细数ThreadLocal三大坑，内存泄露仅是小儿科</title>
      <link>https://blog.shrp.me/post/%E7%BB%86%E6%95%B0ThreadLocal%E4%B8%89%E5%A4%A7%E5%9D%91%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BB%85%E6%98%AF%E5%B0%8F%E5%84%BF%E7%A7%91.html</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/post/%E7%BB%86%E6%95%B0ThreadLocal%E4%B8%89%E5%A4%A7%E5%9D%91%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BB%85%E6%98%AF%E5%B0%8F%E5%84%BF%E7%A7%91.html</guid>
      <description>原文地址 我在参加Code Review的时候不止一次听到有同学说：我写的这个上下文工具没问题，在线上跑了好久了。其实这种想法是有问题的，Thr</description>
    </item>
    
    <item>
      <title>从Simple迁移到Hugo</title>
      <link>https://blog.shrp.me/post/%E4%BB%8ESimple%E8%BF%81%E7%A7%BB%E5%88%B0Hugo.html</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/post/%E4%BB%8ESimple%E8%BF%81%E7%A7%BB%E5%88%B0Hugo.html</guid>
      <description>为什么不继续用Simple Simple是一个非常简单又纯粹的博客托管方案,然而它严重依赖 github 的API登录方案&amp;ndash;而这个方案已经在去年</description>
    </item>
    
    <item>
      <title>tomcat7-maven-plugin指定 tomcat 版本</title>
      <link>https://blog.shrp.me/adjust-embedded-tomcat-version.html</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/adjust-embedded-tomcat-version.html</guid>
      <description>最近用 Maven tomcat 插件启动的时候，突然发现很多关于 tomcat 扫描注解时发现一些 jar 包内 meta-info.class 的注解无效的信息，一般提示是Invalid byte tag in constant pool: 19。 这是为啥呢？</description>
    </item>
    
    <item>
      <title>拨公司 VPN 后，指定了外网 dns，却无法访问内网域名的解决办法</title>
      <link>https://blog.shrp.me/Changing_DNS_After_VPN_CAUSE_INTRANET_DOMAIN_Resorve_Fail.html</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/Changing_DNS_After_VPN_CAUSE_INTRANET_DOMAIN_Resorve_Fail.html</guid>
      <description>今天我遇到一个情况，就是使用公司 VPN 后再指定家里的 DNS 后，公司的内网域名反而无法访问的问题。 这是因为我家路由器上的 DNSMASQ 配置了rebind_prot</description>
    </item>
    
    <item>
      <title>【分享】一个 Java 线程池 bug 引发的 GC 机制思考</title>
      <link>https://blog.shrp.me/BAMG55WHQt1iYrNSBRRh.html</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/BAMG55WHQt1iYrNSBRRh.html</guid>
      <description>原文地址：一个 Java 线程池 bug 引发的 GC 机制思考 问题描述 前几天，在帮同事排查一个线上偶发的线程池错误 逻辑很简单，线程池执行了一个带结果的异步任务。但</description>
    </item>
    
    <item>
      <title>怎么把脚本变为 Mac 的 App</title>
      <link>https://blog.shrp.me/How-To-Convert-Shell-Script-Into-Mac-App.html</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/How-To-Convert-Shell-Script-Into-Mac-App.html</guid>
      <description>有时候我们需要把一些有意义的脚本变成程序，发布出来；或者对一些已有的程序增加一点定制，比如我下载的这款 OpenProj，好用是好用，但是默认</description>
    </item>
    
    <item>
      <title>我是中国人，谷歌的蜻蜓项目必须继续</title>
      <link>https://blog.shrp.me/i-am-chinese-the-dragonfly-must-go-on.html</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.shrp.me/i-am-chinese-the-dragonfly-must-go-on.html</guid>
      <description>有两个省，甲省有B企业生产粮食，但是日常在里面掺屎，群众虽然心知肚明，可是敢怒不敢言，时不时吃了一嘴屎；乙省规定健全，乙省的G企业虽然不像自</description>
    </item>
    
  </channel>
</rss>
