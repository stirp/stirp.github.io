<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>尚弟的小笔记</title>
        <atom:link href="http://stirp.github.io/rss.xml" rel="self" type="application/rss+xml"/>
        <link>http://stirp.github.io</link>
        <dc:language>zh-cn</dc:language>
        <sy:updatePeriod>hourly</sy:updatePeriod>
        <sy:updateFrequency>1</sy:updateFrequency>
    <item><title>title</title><link>http://stirp.github.io/test.html</link><pubdate>2016-01-17</pubdate><content:encoded>&lt;pre class=" language-cpp"&gt;&lt;code class=" language-cpp"&gt;&lt;span class="token comment" spellcheck="true"&gt;
//#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class="token property"&gt;#include &lt;span class="token property"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token property"&gt;#include &lt;span class="token property"&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token property"&gt;#include &lt;span class="token property"&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token property"&gt;#include &lt;span class="token property"&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token property"&gt;#include &lt;span class="token property"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token property"&gt;#include &lt;span class="token property"&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token keyword"&gt;using&lt;/span&gt; &lt;span class="token keyword"&gt;namespace&lt;/span&gt; std&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token keyword"&gt;typedef&lt;/span&gt; &lt;span class="token keyword"&gt;long&lt;/span&gt; &lt;span class="token keyword"&gt;long&lt;/span&gt; ll&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token keyword"&gt;typedef&lt;/span&gt; &lt;span class="token keyword"&gt;unsigned&lt;/span&gt; &lt;span class="token keyword"&gt;long&lt;/span&gt; &lt;span class="token keyword"&gt;long&lt;/span&gt; ull&lt;span class="token punctuation"&gt;;&lt;/span&gt;

&lt;span class="token keyword"&gt;int&lt;/span&gt; &lt;span class="token function"&gt;iRead&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;
&lt;span class="token punctuation"&gt;{&lt;/span&gt;
    &lt;span class="token keyword"&gt;int&lt;/span&gt; ret &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;int&lt;/span&gt; ch&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;while&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token operator"&gt;!&lt;/span&gt;&lt;span class="token function"&gt;isdigit&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;ch &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token function"&gt;getchar&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ch &lt;span class="token operator"&gt;!=&lt;/span&gt; &lt;span class="token string"&gt;'-'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;bool&lt;/span&gt; bm &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;ch &lt;span class="token operator"&gt;==&lt;/span&gt; &lt;span class="token string"&gt;'-'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt; &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;bm&lt;span class="token punctuation"&gt;)&lt;/span&gt; ch &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token function"&gt;getchar&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;while&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;ret &lt;span class="token operator"&gt;=&lt;/span&gt; ret &lt;span class="token operator"&gt;*&lt;/span&gt; &lt;span class="token number"&gt;10&lt;/span&gt; &lt;span class="token operator"&gt;+&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;ch &lt;span class="token operator"&gt;-&lt;/span&gt; &lt;span class="token string"&gt;'0'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token function"&gt;isdigit&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;ch &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token function"&gt;getchar&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;return&lt;/span&gt; bm &lt;span class="token operator"&gt;?&lt;/span&gt; &lt;span class="token operator"&gt;-&lt;/span&gt;ret &lt;span class="token operator"&gt;:&lt;/span&gt; ret&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;

&lt;span class="token keyword"&gt;const&lt;/span&gt; &lt;span class="token keyword"&gt;int&lt;/span&gt; N &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;300003&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token keyword"&gt;const&lt;/span&gt; &lt;span class="token keyword"&gt;int&lt;/span&gt; STP &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;100000&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token keyword"&gt;struct&lt;/span&gt; iT&lt;span class="token punctuation"&gt;;&lt;/span&gt;
iT &lt;span class="token operator"&gt;*&lt;/span&gt;q&lt;span class="token punctuation"&gt;[&lt;/span&gt;N&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token keyword"&gt;struct&lt;/span&gt; iT
&lt;span class="token punctuation"&gt;{&lt;/span&gt;
    iT &lt;span class="token operator"&gt;*&lt;/span&gt;fa&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token operator"&gt;*&lt;/span&gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;2&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;int&lt;/span&gt; val&lt;span class="token punctuation"&gt;,&lt;/span&gt; s&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;bool&lt;/span&gt; rev&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token property"&gt;#define iDir(c) ((c)-&amp;gt;fa-&amp;gt;ch[1] == (c))&lt;/span&gt;
    &lt;span class="token keyword"&gt;void&lt;/span&gt; &lt;span class="token function"&gt;up&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;
    &lt;span class="token punctuation"&gt;{&lt;/span&gt;
        s &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt; &lt;span class="token operator"&gt;+&lt;/span&gt; 
            &lt;span class="token punctuation"&gt;(&lt;/span&gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt; &lt;span class="token operator"&gt;?&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;s &lt;span class="token operator"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;+&lt;/span&gt; 
            &lt;span class="token punctuation"&gt;(&lt;/span&gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt; &lt;span class="token operator"&gt;?&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;s &lt;span class="token operator"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token punctuation"&gt;}&lt;/span&gt;
    &lt;span class="token keyword"&gt;void&lt;/span&gt; &lt;span class="token function"&gt;down&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;
    &lt;span class="token punctuation"&gt;{&lt;/span&gt;
        &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token operator"&gt;!&lt;/span&gt;rev&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token keyword"&gt;return&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        rev &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token function"&gt;swap&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;rev &lt;span class="token operator"&gt;^&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;rev &lt;span class="token operator"&gt;^&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token punctuation"&gt;}&lt;/span&gt;
    &lt;span class="token keyword"&gt;void&lt;/span&gt; &lt;span class="token function"&gt;rot&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token comment" spellcheck="true"&gt; // 把this转到fa的位置 
&lt;/span&gt;    &lt;span class="token punctuation"&gt;{&lt;/span&gt;
        iT &lt;span class="token operator"&gt;*&lt;/span&gt;f &lt;span class="token operator"&gt;=&lt;/span&gt; fa&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;f&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;fa&lt;span class="token punctuation"&gt;)&lt;/span&gt; f&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;fa&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token function"&gt;iDir&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;f&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt; &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;int&lt;/span&gt; dr &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token function"&gt;iDir&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        fa &lt;span class="token operator"&gt;=&lt;/span&gt; f&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;fa&lt;span class="token punctuation"&gt;,&lt;/span&gt; f&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;fa &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token operator"&gt;!&lt;/span&gt;dr&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token operator"&gt;!&lt;/span&gt;dr&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;fa &lt;span class="token operator"&gt;=&lt;/span&gt; f&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        f&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;dr&lt;span class="token punctuation"&gt;]&lt;/span&gt; &lt;span class="token operator"&gt;=&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token operator"&gt;!&lt;/span&gt;dr&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token operator"&gt;!&lt;/span&gt;dr&lt;span class="token punctuation"&gt;]&lt;/span&gt; &lt;span class="token operator"&gt;=&lt;/span&gt; f&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        f&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;&lt;span class="token function"&gt;up&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token function"&gt;up&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;     &lt;span class="token comment" spellcheck="true"&gt; // !!!! 此时f已经是this的孩子了 
&lt;/span&gt;    &lt;span class="token punctuation"&gt;}&lt;/span&gt;
    iT &lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token function"&gt;splay&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;iT &lt;span class="token operator"&gt;*&lt;/span&gt;tag &lt;span class="token operator"&gt;=&lt;/span&gt; NULL&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token comment" spellcheck="true"&gt; // 把this转到tag下，返回this 
&lt;/span&gt;    &lt;span class="token punctuation"&gt;{&lt;/span&gt;
        iT &lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token operator"&gt;*&lt;/span&gt;p &lt;span class="token operator"&gt;=&lt;/span&gt; q&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;for&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;iT &lt;span class="token operator"&gt;*&lt;/span&gt;i &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt; i &lt;span class="token operator"&gt;!=&lt;/span&gt; tag&lt;span class="token punctuation"&gt;;&lt;/span&gt; i &lt;span class="token operator"&gt;=&lt;/span&gt; i&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;fa&lt;span class="token punctuation"&gt;)&lt;/span&gt;
            &lt;span class="token operator"&gt;*&lt;/span&gt;p&lt;span class="token operator"&gt;++&lt;/span&gt; &lt;span class="token operator"&gt;=&lt;/span&gt; i&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;while&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;p &lt;span class="token operator"&gt;!=&lt;/span&gt; q&lt;span class="token punctuation"&gt;)&lt;/span&gt;
            &lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token operator"&gt;--&lt;/span&gt;p&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;&lt;span class="token function"&gt;down&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;for&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt; fa &lt;span class="token operator"&gt;!=&lt;/span&gt; tag&lt;span class="token punctuation"&gt;;&lt;/span&gt; &lt;span class="token function"&gt;rot&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;
            &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;fa&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;fa &lt;span class="token operator"&gt;!=&lt;/span&gt; tag&lt;span class="token punctuation"&gt;)&lt;/span&gt;  &lt;span class="token comment" spellcheck="true"&gt; // 双旋的情况 
&lt;/span&gt;                &lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token function"&gt;iDir&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;==&lt;/span&gt; &lt;span class="token function"&gt;iDir&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;fa&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;?&lt;/span&gt; fa &lt;span class="token operator"&gt;:&lt;/span&gt; &lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;&lt;span class="token function"&gt;rot&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;return&lt;/span&gt; &lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token punctuation"&gt;}&lt;/span&gt;
    iT &lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token function"&gt;select&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token keyword"&gt;int&lt;/span&gt; k&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token comment" spellcheck="true"&gt; // 取rank k 从0开始 
&lt;/span&gt;    &lt;span class="token punctuation"&gt;{&lt;/span&gt;
        &lt;span class="token function"&gt;down&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;int&lt;/span&gt; sl &lt;span class="token operator"&gt;=&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt; &lt;span class="token operator"&gt;?&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;s &lt;span class="token operator"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;sl &lt;span class="token operator"&gt;==&lt;/span&gt; k&lt;span class="token punctuation"&gt;)&lt;/span&gt;
            &lt;span class="token keyword"&gt;return&lt;/span&gt; &lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;else&lt;/span&gt; &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;k &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt; sl&lt;span class="token punctuation"&gt;)&lt;/span&gt;
            &lt;span class="token keyword"&gt;return&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;&lt;span class="token function"&gt;select&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;k&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;else&lt;/span&gt;
            &lt;span class="token keyword"&gt;return&lt;/span&gt; ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;&lt;span class="token function"&gt;select&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;k &lt;span class="token operator"&gt;-&lt;/span&gt; sl &lt;span class="token operator"&gt;-&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token punctuation"&gt;}&lt;/span&gt;
    iT &lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token function"&gt;min&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;
    &lt;span class="token punctuation"&gt;{&lt;/span&gt;
        iT &lt;span class="token operator"&gt;*&lt;/span&gt;c &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;while&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;c&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;&lt;span class="token function"&gt;down&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; c&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;
            c &lt;span class="token operator"&gt;=&lt;/span&gt; c&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;return&lt;/span&gt; c&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token punctuation"&gt;}&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;ss&lt;span class="token punctuation"&gt;[&lt;/span&gt;N&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token operator"&gt;*&lt;/span&gt;sp &lt;span class="token operator"&gt;=&lt;/span&gt; ss&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token keyword"&gt;int&lt;/span&gt; arr&lt;span class="token punctuation"&gt;[&lt;/span&gt;N&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token comment" spellcheck="true"&gt;
// 建[l,r)的高度平衡splay 像线段树一样 感觉快一点 当然也可以一个个insert &amp;amp; splay 
&lt;/span&gt;iT &lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token function"&gt;iMake&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token keyword"&gt;int&lt;/span&gt; l&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token keyword"&gt;int&lt;/span&gt; r&lt;span class="token punctuation"&gt;,&lt;/span&gt; iT &lt;span class="token operator"&gt;*&lt;/span&gt;f &lt;span class="token operator"&gt;=&lt;/span&gt; NULL&lt;span class="token punctuation"&gt;)&lt;/span&gt;
&lt;span class="token punctuation"&gt;{&lt;/span&gt;
    &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;l &amp;gt;&lt;span class="token operator"&gt;=&lt;/span&gt; r&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token keyword"&gt;return&lt;/span&gt; NULL&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;int&lt;/span&gt; m &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;l &lt;span class="token operator"&gt;+&lt;/span&gt; r&lt;span class="token punctuation"&gt;)&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    iT &lt;span class="token operator"&gt;*&lt;/span&gt;c &lt;span class="token operator"&gt;=&lt;/span&gt; sp&lt;span class="token operator"&gt;++&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token operator"&gt;*&lt;/span&gt;c &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;iT&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;{&lt;/span&gt;
        f&lt;span class="token punctuation"&gt;,&lt;/span&gt; 
        &lt;span class="token punctuation"&gt;{&lt;/span&gt;&lt;span class="token function"&gt;iMake&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;l&lt;span class="token punctuation"&gt;,&lt;/span&gt; m&lt;span class="token punctuation"&gt;,&lt;/span&gt; c&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token function"&gt;iMake&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;m &lt;span class="token operator"&gt;+&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; r&lt;span class="token punctuation"&gt;,&lt;/span&gt; c&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; 
        arr&lt;span class="token punctuation"&gt;[&lt;/span&gt;m&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; r &lt;span class="token operator"&gt;-&lt;/span&gt; l&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token boolean"&gt;false&lt;/span&gt;
    &lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;return&lt;/span&gt; c&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;

&lt;span class="token keyword"&gt;int&lt;/span&gt; n&lt;span class="token punctuation"&gt;;&lt;/span&gt;

&lt;span class="token keyword"&gt;int&lt;/span&gt; &lt;span class="token function"&gt;main&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;
&lt;span class="token punctuation"&gt;{&lt;/span&gt;
    n &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token function"&gt;iRead&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;for&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token keyword"&gt;int&lt;/span&gt; i &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt; i &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt; n&lt;span class="token punctuation"&gt;;&lt;/span&gt; &lt;span class="token operator"&gt;++&lt;/span&gt;i&lt;span class="token punctuation"&gt;)&lt;/span&gt;
        arr&lt;span class="token punctuation"&gt;[&lt;/span&gt;i&lt;span class="token punctuation"&gt;]&lt;/span&gt; &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token function"&gt;iRead&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    iT &lt;span class="token operator"&gt;*&lt;/span&gt;rt &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token function"&gt;iMake&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; n&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;int&lt;/span&gt; i&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;for&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;i &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt; i &lt;span class="token operator"&gt;&amp;lt;=&lt;/span&gt; STP&lt;span class="token punctuation"&gt;;&lt;/span&gt; &lt;span class="token operator"&gt;++&lt;/span&gt;i&lt;span class="token punctuation"&gt;)&lt;/span&gt;
    &lt;span class="token punctuation"&gt;{&lt;/span&gt;
        &lt;span class="token keyword"&gt;int&lt;/span&gt; c &lt;span class="token operator"&gt;=&lt;/span&gt; rt&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;&lt;span class="token function"&gt;min&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;val&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;c &lt;span class="token operator"&gt;==&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;
            &lt;span class="token keyword"&gt;break&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;c &lt;span class="token operator"&gt;==&lt;/span&gt; n&lt;span class="token punctuation"&gt;)&lt;/span&gt;         &lt;span class="token comment" spellcheck="true"&gt; // !!!! 特判翻转全部的情况 
&lt;/span&gt;            rt&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;rev &lt;span class="token operator"&gt;^&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;  &lt;span class="token comment" spellcheck="true"&gt; // 否则下面会select(n) 然后炸掉 
&lt;/span&gt;        &lt;span class="token keyword"&gt;else&lt;/span&gt;
        &lt;span class="token punctuation"&gt;{&lt;/span&gt;
            rt &lt;span class="token operator"&gt;=&lt;/span&gt; rt&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;&lt;span class="token function"&gt;select&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;c&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;&lt;span class="token function"&gt;splay&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token comment" spellcheck="true"&gt; // splay完，根已经换了 
&lt;/span&gt;            rt&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;ch&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&amp;gt;rev &lt;span class="token operator"&gt;^&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
        &lt;span class="token punctuation"&gt;}&lt;/span&gt;
    &lt;span class="token punctuation"&gt;}&lt;/span&gt;
    &lt;span class="token function"&gt;printf&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="token string"&gt;"%d\n"&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; i &lt;span class="token operator"&gt;&amp;lt;=&lt;/span&gt; STP &lt;span class="token operator"&gt;?&lt;/span&gt; i &lt;span class="token operator"&gt;:&lt;/span&gt; &lt;span class="token operator"&gt;-&lt;/span&gt;&lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token function"&gt;fclose&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;/span&gt;stdout&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
    &lt;span class="token keyword"&gt;return&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;</content:encoded><guid>http://stirp.github.io/test.html</guid></item></channel>
</rss>